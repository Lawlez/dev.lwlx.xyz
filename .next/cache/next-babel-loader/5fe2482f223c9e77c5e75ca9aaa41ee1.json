{"ast":null,"code":"import RSS from 'rss';\nimport fs from 'fs';\nimport showdown from 'showdown';\nimport { globals } from './globals';\nexport const generateRSS = async posts => {\n  posts.map(post => {\n    if (!post.canonicalUrl) throw new Error(\"Missing canonicalUrl. A canonical URL is required for RSS feed generation. If you don't care about RSS, uncomment `generateRSS(posts)` at the bottom of index.tsx.\");\n    return post;\n  });\n  const feed = new RSS({\n    title: globals.siteName,\n    description: globals.siteDescription,\n    feed_url: `${globals.url}/rss.xml`,\n    site_url: globals.url,\n    image_url: `${globals.url}/icon.png`,\n    managingEditor: globals.email,\n    webMaster: globals.email,\n    copyright: `${new Date().getFullYear()} ${globals.yourName}`,\n    language: 'en',\n    pubDate: globals.siteCreationDate,\n    ttl: 60\n  });\n  let isValid = true;\n\n  for (const post of posts) {\n    const converter = new showdown.Converter();\n    const html = converter.makeHtml(post.content);\n\n    if (!post.datePublished) {\n      isValid = false;\n      console.warn('All posts must have a publishedDate timestamp when generating RSS feed.');\n      console.warn('Not generating rss.xml.');\n    }\n\n    feed.item({\n      title: post.title,\n      description: html,\n      url: `https://vriad.com/${post.path}`,\n      categories: post.tags || [],\n      author: post.author || 'Colin McDonnell',\n      date: new Date(post.datePublished || 0).toISOString()\n    });\n  }\n\n  if (!isValid) return; // writes RSS.xml to public directory\n\n  const path = `${process.cwd()}/public/rss.xml`;\n  fs.writeFileSync(path, feed.xml(), 'utf8');\n  console.log(`generated RSS feed`);\n};","map":null,"metadata":{},"sourceType":"module"}