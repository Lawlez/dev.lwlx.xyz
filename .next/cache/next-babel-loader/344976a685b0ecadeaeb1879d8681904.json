{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { darcula } from 'react-syntax-highlighter/dist/cjs/styles/prism';\n\nvar Code = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Code, _React$PureComponent);\n\n  var _super = _createSuper(Code);\n\n  function Code() {\n    _classCallCheck(this, Code);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Code, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          language = _this$props.language,\n          value = _this$props.value;\n      return __jsx(SyntaxHighlighter, {\n        language: (language === 'ts' ? 'typescript' : language) || 'typescript',\n        style: darcula\n      }, value);\n    }\n  }]);\n\n  return Code;\n}(React.PureComponent);\n\nexport { Code as default };","map":null,"metadata":{},"sourceType":"module"}