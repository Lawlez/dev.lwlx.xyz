{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lwlx/Desktop/PROJECTS/dev.lwlx.xyz/pages/blog/[blog].tsx\";\nimport React from 'react';\nimport glob from 'glob';\nimport { BlogPost } from '../../components/BlogPost';\nimport { loadPost } from '../../loader';\n\nfunction Post(props) {\n  const {\n    post\n  } = props;\n  return /*#__PURE__*/_jsxDEV(BlogPost, {\n    post: post\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n}\n\nexport const getStaticPaths = () => {\n  const blogs = glob.sync('./md/blog/*.md');\n  const slugs = blogs.map(file => {\n    const popped = file.split('/').pop();\n    if (!popped) throw new Error(`Invalid blog path: ${file}`);\n    return popped.slice(0, -3).trim();\n  });\n  const paths = slugs.map(slug => `/blog/${slug}`);\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  const post = await loadPost(`blog/${params.blog}.md`);\n  return {\n    props: {\n      post\n    }\n  };\n};\nexport default Post;","map":{"version":3,"sources":["/Users/lwlx/Desktop/PROJECTS/dev.lwlx.xyz/pages/blog/[blog].tsx"],"names":["React","glob","BlogPost","loadPost","Post","props","post","getStaticPaths","blogs","sync","slugs","map","file","popped","split","pop","Error","slice","trim","paths","slug","fallback","getStaticProps","params","blog"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,QAAT,QAAyB,cAAzB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAA0B;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,sBAAO,QAAC,QAAD;AAAU,IAAA,IAAI,EAAEC;AAAhB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,QAAMC,KAAK,GAAGP,IAAI,CAACQ,IAAL,CAAU,gBAAV,CAAd;AACA,QAAMC,KAAK,GAAGF,KAAK,CAACG,GAAN,CAAWC,IAAD,IAAkB;AACxC,UAAMC,MAAM,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,EAAgBC,GAAhB,EAAf;AACA,QAAI,CAACF,MAAL,EAAa,MAAM,IAAIG,KAAJ,CAAW,sBAAqBJ,IAAK,EAArC,CAAN;AACb,WAAOC,MAAM,CAACI,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,EAAoBC,IAApB,EAAP;AACD,GAJa,CAAd;AAMA,QAAMC,KAAK,GAAGT,KAAK,CAACC,GAAN,CAAWS,IAAD,IAAW,SAAQA,IAAK,EAAlC,CAAd;AACA,SAAO;AAAED,IAAAA,KAAF;AAASE,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AACD,CAVM;AAYP,OAAO,MAAMC,cAAc,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAA2B;AACvD,QAAMjB,IAAI,GAAG,MAAMH,QAAQ,CAAE,QAAOoB,MAAM,CAACC,IAAK,KAArB,CAA3B;AACA,SAAO;AAAEnB,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AAAT,GAAP;AACD,CAHM;AAKP,eAAeF,IAAf","sourcesContent":["import React from 'react';\nimport glob from 'glob';\nimport { BlogPost } from '../../components/BlogPost';\nimport { loadPost } from '../../loader';\n\nfunction Post(props: any) {\n  const { post } = props;\n  return <BlogPost post={post} />;\n}\n\nexport const getStaticPaths = () => {\n  const blogs = glob.sync('./md/blog/*.md');\n  const slugs = blogs.map((file: string) => {\n    const popped = file.split('/').pop();\n    if (!popped) throw new Error(`Invalid blog path: ${file}`);\n    return popped.slice(0, -3).trim();\n  });\n\n  const paths = slugs.map((slug) => `/blog/${slug}`);\n  return { paths, fallback: false };\n};\n\nexport const getStaticProps = async ({ params }: any) => {\n  const post = await loadPost(`blog/${params.blog}.md`);\n  return { props: { post } };\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}