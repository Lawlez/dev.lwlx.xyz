exports.ids = [3];
exports.modules = {

/***/ "./md/blog/Sick-Security-and-Dev-Tools.md":
/*!************************************************!*\
  !*** ./md/blog/Sick-Security-and-Dev-Tools.md ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"---\\ntitle: A Collection of useful Security and DevOps tools.\\ndescription: a collection of useful, special, or just cool tools to use and try to get more done in less time.\\npublished: true\\ndatePublished: 1600786088187\\nauthor: lwlx\\nauthorTwitter: \\\"0x0000005\\\"\\nauthorPhoto: /profile.jpg\\ntags:\\n  - tools\\n  - devtools\\n  - security\\n  - javascript\\n  - devops\\nthumbnailPhoto: /sicktools-sec-devops.jpg\\nbannerPhoto: /sicktools-sec-devops.jpg\\ncanonicalUrl:\\n---\\n\\n# sickTools\\n\\na collection of useful, special, or just cool tools to use and try to get more done in less time.\\n\\n---\\n\\n## AppSec Tools\\n\\n- [x] [lynis](https://github.com/CISOfy/lynis) | `active` |: Security auditing tool for Linux, macOS, and UNIX-based systems\\n- [ ] [killcord](https://github.com/nomasters/killcord) | **`new`** |: a censorship resistant deadman's switch\\n- [x] [OWASP ZAP](https://github.com/zaproxy/zaproxy) | `active` |: autodetect security vulnerabilities in your web applications while developing and testing your applications\\n- [ ] [ClamAV](https://github.com/Cisco-Talos/clamav-faq) | **`new`** |: open source antivirus engine for detecting trojans, viruses, malware & other malicious threats.\\n- [ ] [endlessh](https://github.com/skeeto/endlessh) | **`new`** |: Endlessh is an SSH tarpit (honeypot) that very slowly sends an endless, random SSH banner\\n\\n---\\n\\n## Automation Tools\\n\\n- [ ]\\n\\n---\\n\\n## developer Tools\\n\\n- [x] [(js-) IPFS](https://github.com/ipfs/js-ipfs) | `active` |: A peer-to-peer hypermedia protocol\\n      designed to make the web faster, safer, and more open.\\n- [ ] [ML5.js](https://github.com/ml5js/ml5-library) | _tested_ |: Friendly & easy to use machine learning for the web!\\n- [ ] [TensorFlow](https://github.com/tensorflow) | **`new`** |: Open Source Machine Learning Framework (With extensive docs and big community)\\n- [ ] [deno](https://github.com/denoland/deno) | _testing_ |: Deno aims to provide a productive and secure scripting environment for the modern programmer. It is built on top of V8, Rust, and TypeScript.\\n- [x] [PNPM](https://github.com/pnpm/pnpm) | _testing_ |: Faster, disk space efficient package manager, with good monorepo support.\\n- [ ] [verdaccio](https://verdaccio.org/) | **`new`** |: A lightweight open source private npm proxy registry\\n- [ ] [caprover](https://github.com/caprover/caprover) | **`new`** |: Easiest app/database deployment platform and webserver package for your NodeJS, Python, PHP, Ruby, Go applications. No Docker, nginx knowledge required!\\n\\n---\\n\\n## misc Tools\\n\\n- [x] [Chrome Galvanizer](https://thehackerblog.com/galvanizer/) | _tested_ |: Harden your Chrome browser via enterprise policy.\\n- [ ] [Cursed Chrome](https://github.com/mandatoryprogrammer/CursedChrome) | **`new`** |: Chrome-extension implant that turns victim Chrome browsers into fully-functional HTTP proxies, allowing you to browse sites as your victims.\\n- [x] [NMAP](https://github.com/nmap/nmap) | `active` |: The #1 network scanner & mapper\\n- [x] [nmap-vulners](https://github.com/vulnersCom/nmap-vulners) | `active` |: extension to NMAP that chekcs for more known vulns\\n- [ ] [lesspass](https://github.com/lesspass/lesspass) | **`new`** |: stateless open source password manager\\n- [ ] [GrantProxy](https://grantproxy.com/) | **`new`** |: Turn your web browser into a magic proxy server in one click.\\n- [ ] [ohmyzsh](https://github.com/ohmyzsh/ohmyzsh) | **`new`** |: A delightful community-driven framework for managing your zsh configuration. Includes 200+ plugins\\n\\n---\\n\\n# sickGuides\\n\\na collection of useful guides or tutorials to stay safe.\\n\\n## Security Guides\\n\\n- [x] [OWASP Cheat Sheets](https://cheatsheetseries.owasp.org/) | `active` |: These cheat sheets were created by various application security professionals who have expertise in specific topics.\\n- [ ] [PortSwigger XSS CheatSheet](https://portswigger.net/web-security/cross-site-scripting/cheat-sheet) | `active` |: An extensive list of known XSS vulns, sortable and searchable\\n\\n---\\n\\n## Dev Guides\\n\\n- [ ] [HTMLHEAD.dev](https://htmlhead.dev/) : A free guide to HTML5 <head> elements\\n- [ ] [CSS FlexBox Cheatsheet](https://css-tricks.com/snippets/css/a-guide-to-flexbox/) | `active` |: the only CSS flexbox cheatsheet you'll need\\n- [x] [DevDocs.io](https://devdocs.io/) | `active` |: Huge, fast, searchable reporsitory for dev documentation, from java to docker, from rust to WordPress.\\n- [ ] [Set Up a Private NPM Registry Locally](https://blog.bitsrc.io/how-to-set-up-a-private-npm-registry-locally-1065e6790796) | _tested_ |: using verdaccio to setup local NPM registry.\\n- [ ] [Grepper](https://www.codegrepper.com/index.php) | **`new`** |: Accrue code answers to common coding problems, find code answers without thinking - using Greppers “code problem” search engine.\\n\\n---\\n\\n### Sources\\n\\n- [`OWASP`](https://owasp.org/) — The Open Source Web Application Security Protocol\\n- [`Matthew Bryant`](https://github.com/mandatoryprogrammer/) — XSSHunter / chrome galvanizer\\n- [`lwlx`](https://skills.rendered.ch) — lwlx\\n\\n## License\\n\\n[The MIT License](LICENSE).\\n\\n- `- [ ] ([tool name](<link>)|*tested*|**`new`**|deprecated| `active`): <description> `\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9tZC9ibG9nL1NpY2stU2VjdXJpdHktYW5kLURldi1Ub29scy5tZD8wYzAwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQWUsaXFLQUFrbUsiLCJmaWxlIjoiLi9tZC9ibG9nL1NpY2stU2VjdXJpdHktYW5kLURldi1Ub29scy5tZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiLS0tXFxudGl0bGU6IEEgQ29sbGVjdGlvbiBvZiB1c2VmdWwgU2VjdXJpdHkgYW5kIERldk9wcyB0b29scy5cXG5kZXNjcmlwdGlvbjogYSBjb2xsZWN0aW9uIG9mIHVzZWZ1bCwgc3BlY2lhbCwgb3IganVzdCBjb29sIHRvb2xzIHRvIHVzZSBhbmQgdHJ5IHRvIGdldCBtb3JlIGRvbmUgaW4gbGVzcyB0aW1lLlxcbnB1Ymxpc2hlZDogdHJ1ZVxcbmRhdGVQdWJsaXNoZWQ6IDE2MDA3ODYwODgxODdcXG5hdXRob3I6IGx3bHhcXG5hdXRob3JUd2l0dGVyOiBcXFwiMHgwMDAwMDA1XFxcIlxcbmF1dGhvclBob3RvOiAvcHJvZmlsZS5qcGdcXG50YWdzOlxcbiAgLSB0b29sc1xcbiAgLSBkZXZ0b29sc1xcbiAgLSBzZWN1cml0eVxcbiAgLSBqYXZhc2NyaXB0XFxuICAtIGRldm9wc1xcbnRodW1ibmFpbFBob3RvOiAvc2lja3Rvb2xzLXNlYy1kZXZvcHMuanBnXFxuYmFubmVyUGhvdG86IC9zaWNrdG9vbHMtc2VjLWRldm9wcy5qcGdcXG5jYW5vbmljYWxVcmw6XFxuLS0tXFxuXFxuIyBzaWNrVG9vbHNcXG5cXG5hIGNvbGxlY3Rpb24gb2YgdXNlZnVsLCBzcGVjaWFsLCBvciBqdXN0IGNvb2wgdG9vbHMgdG8gdXNlIGFuZCB0cnkgdG8gZ2V0IG1vcmUgZG9uZSBpbiBsZXNzIHRpbWUuXFxuXFxuLS0tXFxuXFxuIyMgQXBwU2VjIFRvb2xzXFxuXFxuLSBbeF0gW2x5bmlzXShodHRwczovL2dpdGh1Yi5jb20vQ0lTT2Z5L2x5bmlzKSB8IGBhY3RpdmVgIHw6IFNlY3VyaXR5IGF1ZGl0aW5nIHRvb2wgZm9yIExpbnV4LCBtYWNPUywgYW5kIFVOSVgtYmFzZWQgc3lzdGVtc1xcbi0gWyBdIFtraWxsY29yZF0oaHR0cHM6Ly9naXRodWIuY29tL25vbWFzdGVycy9raWxsY29yZCkgfCAqKmBuZXdgKiogfDogYSBjZW5zb3JzaGlwIHJlc2lzdGFudCBkZWFkbWFuJ3Mgc3dpdGNoXFxuLSBbeF0gW09XQVNQIFpBUF0oaHR0cHM6Ly9naXRodWIuY29tL3phcHJveHkvemFwcm94eSkgfCBgYWN0aXZlYCB8OiBhdXRvZGV0ZWN0IHNlY3VyaXR5IHZ1bG5lcmFiaWxpdGllcyBpbiB5b3VyIHdlYiBhcHBsaWNhdGlvbnMgd2hpbGUgZGV2ZWxvcGluZyBhbmQgdGVzdGluZyB5b3VyIGFwcGxpY2F0aW9uc1xcbi0gWyBdIFtDbGFtQVZdKGh0dHBzOi8vZ2l0aHViLmNvbS9DaXNjby1UYWxvcy9jbGFtYXYtZmFxKSB8ICoqYG5ld2AqKiB8OiBvcGVuIHNvdXJjZSBhbnRpdmlydXMgZW5naW5lIGZvciBkZXRlY3RpbmcgdHJvamFucywgdmlydXNlcywgbWFsd2FyZSAmIG90aGVyIG1hbGljaW91cyB0aHJlYXRzLlxcbi0gWyBdIFtlbmRsZXNzaF0oaHR0cHM6Ly9naXRodWIuY29tL3NrZWV0by9lbmRsZXNzaCkgfCAqKmBuZXdgKiogfDogRW5kbGVzc2ggaXMgYW4gU1NIIHRhcnBpdCAoaG9uZXlwb3QpIHRoYXQgdmVyeSBzbG93bHkgc2VuZHMgYW4gZW5kbGVzcywgcmFuZG9tIFNTSCBiYW5uZXJcXG5cXG4tLS1cXG5cXG4jIyBBdXRvbWF0aW9uIFRvb2xzXFxuXFxuLSBbIF1cXG5cXG4tLS1cXG5cXG4jIyBkZXZlbG9wZXIgVG9vbHNcXG5cXG4tIFt4XSBbKGpzLSkgSVBGU10oaHR0cHM6Ly9naXRodWIuY29tL2lwZnMvanMtaXBmcykgfCBgYWN0aXZlYCB8OiBBIHBlZXItdG8tcGVlciBoeXBlcm1lZGlhIHByb3RvY29sXFxuICAgICAgZGVzaWduZWQgdG8gbWFrZSB0aGUgd2ViIGZhc3Rlciwgc2FmZXIsIGFuZCBtb3JlIG9wZW4uXFxuLSBbIF0gW01MNS5qc10oaHR0cHM6Ly9naXRodWIuY29tL21sNWpzL21sNS1saWJyYXJ5KSB8IF90ZXN0ZWRfIHw6IEZyaWVuZGx5ICYgZWFzeSB0byB1c2UgbWFjaGluZSBsZWFybmluZyBmb3IgdGhlIHdlYiFcXG4tIFsgXSBbVGVuc29yRmxvd10oaHR0cHM6Ly9naXRodWIuY29tL3RlbnNvcmZsb3cpIHwgKipgbmV3YCoqIHw6IE9wZW4gU291cmNlIE1hY2hpbmUgTGVhcm5pbmcgRnJhbWV3b3JrIChXaXRoIGV4dGVuc2l2ZSBkb2NzIGFuZCBiaWcgY29tbXVuaXR5KVxcbi0gWyBdIFtkZW5vXShodHRwczovL2dpdGh1Yi5jb20vZGVub2xhbmQvZGVubykgfCBfdGVzdGluZ18gfDogRGVubyBhaW1zIHRvIHByb3ZpZGUgYSBwcm9kdWN0aXZlIGFuZCBzZWN1cmUgc2NyaXB0aW5nIGVudmlyb25tZW50IGZvciB0aGUgbW9kZXJuIHByb2dyYW1tZXIuIEl0IGlzIGJ1aWx0IG9uIHRvcCBvZiBWOCwgUnVzdCwgYW5kIFR5cGVTY3JpcHQuXFxuLSBbeF0gW1BOUE1dKGh0dHBzOi8vZ2l0aHViLmNvbS9wbnBtL3BucG0pIHwgX3Rlc3RpbmdfIHw6IEZhc3RlciwgZGlzayBzcGFjZSBlZmZpY2llbnQgcGFja2FnZSBtYW5hZ2VyLCB3aXRoIGdvb2QgbW9ub3JlcG8gc3VwcG9ydC5cXG4tIFsgXSBbdmVyZGFjY2lvXShodHRwczovL3ZlcmRhY2Npby5vcmcvKSB8ICoqYG5ld2AqKiB8OiBBIGxpZ2h0d2VpZ2h0IG9wZW4gc291cmNlIHByaXZhdGUgbnBtIHByb3h5IHJlZ2lzdHJ5XFxuLSBbIF0gW2NhcHJvdmVyXShodHRwczovL2dpdGh1Yi5jb20vY2Fwcm92ZXIvY2Fwcm92ZXIpIHwgKipgbmV3YCoqIHw6IEVhc2llc3QgYXBwL2RhdGFiYXNlIGRlcGxveW1lbnQgcGxhdGZvcm0gYW5kIHdlYnNlcnZlciBwYWNrYWdlIGZvciB5b3VyIE5vZGVKUywgUHl0aG9uLCBQSFAsIFJ1YnksIEdvIGFwcGxpY2F0aW9ucy4gTm8gRG9ja2VyLCBuZ2lueCBrbm93bGVkZ2UgcmVxdWlyZWQhXFxuXFxuLS0tXFxuXFxuIyMgbWlzYyBUb29sc1xcblxcbi0gW3hdIFtDaHJvbWUgR2FsdmFuaXplcl0oaHR0cHM6Ly90aGVoYWNrZXJibG9nLmNvbS9nYWx2YW5pemVyLykgfCBfdGVzdGVkXyB8OiBIYXJkZW4geW91ciBDaHJvbWUgYnJvd3NlciB2aWEgZW50ZXJwcmlzZSBwb2xpY3kuXFxuLSBbIF0gW0N1cnNlZCBDaHJvbWVdKGh0dHBzOi8vZ2l0aHViLmNvbS9tYW5kYXRvcnlwcm9ncmFtbWVyL0N1cnNlZENocm9tZSkgfCAqKmBuZXdgKiogfDogQ2hyb21lLWV4dGVuc2lvbiBpbXBsYW50IHRoYXQgdHVybnMgdmljdGltIENocm9tZSBicm93c2VycyBpbnRvIGZ1bGx5LWZ1bmN0aW9uYWwgSFRUUCBwcm94aWVzLCBhbGxvd2luZyB5b3UgdG8gYnJvd3NlIHNpdGVzIGFzIHlvdXIgdmljdGltcy5cXG4tIFt4XSBbTk1BUF0oaHR0cHM6Ly9naXRodWIuY29tL25tYXAvbm1hcCkgfCBgYWN0aXZlYCB8OiBUaGUgIzEgbmV0d29yayBzY2FubmVyICYgbWFwcGVyXFxuLSBbeF0gW25tYXAtdnVsbmVyc10oaHR0cHM6Ly9naXRodWIuY29tL3Z1bG5lcnNDb20vbm1hcC12dWxuZXJzKSB8IGBhY3RpdmVgIHw6IGV4dGVuc2lvbiB0byBOTUFQIHRoYXQgY2hla2NzIGZvciBtb3JlIGtub3duIHZ1bG5zXFxuLSBbIF0gW2xlc3NwYXNzXShodHRwczovL2dpdGh1Yi5jb20vbGVzc3Bhc3MvbGVzc3Bhc3MpIHwgKipgbmV3YCoqIHw6IHN0YXRlbGVzcyBvcGVuIHNvdXJjZSBwYXNzd29yZCBtYW5hZ2VyXFxuLSBbIF0gW0dyYW50UHJveHldKGh0dHBzOi8vZ3JhbnRwcm94eS5jb20vKSB8ICoqYG5ld2AqKiB8OiBUdXJuIHlvdXIgd2ViIGJyb3dzZXIgaW50byBhIG1hZ2ljIHByb3h5IHNlcnZlciBpbiBvbmUgY2xpY2suXFxuLSBbIF0gW29obXl6c2hdKGh0dHBzOi8vZ2l0aHViLmNvbS9vaG15enNoL29obXl6c2gpIHwgKipgbmV3YCoqIHw6IEEgZGVsaWdodGZ1bCBjb21tdW5pdHktZHJpdmVuIGZyYW1ld29yayBmb3IgbWFuYWdpbmcgeW91ciB6c2ggY29uZmlndXJhdGlvbi4gSW5jbHVkZXMgMjAwKyBwbHVnaW5zXFxuXFxuLS0tXFxuXFxuIyBzaWNrR3VpZGVzXFxuXFxuYSBjb2xsZWN0aW9uIG9mIHVzZWZ1bCBndWlkZXMgb3IgdHV0b3JpYWxzIHRvIHN0YXkgc2FmZS5cXG5cXG4jIyBTZWN1cml0eSBHdWlkZXNcXG5cXG4tIFt4XSBbT1dBU1AgQ2hlYXQgU2hlZXRzXShodHRwczovL2NoZWF0c2hlZXRzZXJpZXMub3dhc3Aub3JnLykgfCBgYWN0aXZlYCB8OiBUaGVzZSBjaGVhdCBzaGVldHMgd2VyZSBjcmVhdGVkIGJ5IHZhcmlvdXMgYXBwbGljYXRpb24gc2VjdXJpdHkgcHJvZmVzc2lvbmFscyB3aG8gaGF2ZSBleHBlcnRpc2UgaW4gc3BlY2lmaWMgdG9waWNzLlxcbi0gWyBdIFtQb3J0U3dpZ2dlciBYU1MgQ2hlYXRTaGVldF0oaHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQvd2ViLXNlY3VyaXR5L2Nyb3NzLXNpdGUtc2NyaXB0aW5nL2NoZWF0LXNoZWV0KSB8IGBhY3RpdmVgIHw6IEFuIGV4dGVuc2l2ZSBsaXN0IG9mIGtub3duIFhTUyB2dWxucywgc29ydGFibGUgYW5kIHNlYXJjaGFibGVcXG5cXG4tLS1cXG5cXG4jIyBEZXYgR3VpZGVzXFxuXFxuLSBbIF0gW0hUTUxIRUFELmRldl0oaHR0cHM6Ly9odG1saGVhZC5kZXYvKSA6IEEgZnJlZSBndWlkZSB0byBIVE1MNSA8aGVhZD4gZWxlbWVudHNcXG4tIFsgXSBbQ1NTIEZsZXhCb3ggQ2hlYXRzaGVldF0oaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9zbmlwcGV0cy9jc3MvYS1ndWlkZS10by1mbGV4Ym94LykgfCBgYWN0aXZlYCB8OiB0aGUgb25seSBDU1MgZmxleGJveCBjaGVhdHNoZWV0IHlvdSdsbCBuZWVkXFxuLSBbeF0gW0RldkRvY3MuaW9dKGh0dHBzOi8vZGV2ZG9jcy5pby8pIHwgYGFjdGl2ZWAgfDogSHVnZSwgZmFzdCwgc2VhcmNoYWJsZSByZXBvcnNpdG9yeSBmb3IgZGV2IGRvY3VtZW50YXRpb24sIGZyb20gamF2YSB0byBkb2NrZXIsIGZyb20gcnVzdCB0byBXb3JkUHJlc3MuXFxuLSBbIF0gW1NldCBVcCBhIFByaXZhdGUgTlBNIFJlZ2lzdHJ5IExvY2FsbHldKGh0dHBzOi8vYmxvZy5iaXRzcmMuaW8vaG93LXRvLXNldC11cC1hLXByaXZhdGUtbnBtLXJlZ2lzdHJ5LWxvY2FsbHktMTA2NWU2NzkwNzk2KSB8IF90ZXN0ZWRfIHw6IHVzaW5nIHZlcmRhY2NpbyB0byBzZXR1cCBsb2NhbCBOUE0gcmVnaXN0cnkuXFxuLSBbIF0gW0dyZXBwZXJdKGh0dHBzOi8vd3d3LmNvZGVncmVwcGVyLmNvbS9pbmRleC5waHApIHwgKipgbmV3YCoqIHw6IEFjY3J1ZSBjb2RlIGFuc3dlcnMgdG8gY29tbW9uIGNvZGluZyBwcm9ibGVtcywgZmluZCBjb2RlIGFuc3dlcnMgd2l0aG91dCB0aGlua2luZyAtIHVzaW5nIEdyZXBwZXJzIOKAnGNvZGUgcHJvYmxlbeKAnSBzZWFyY2ggZW5naW5lLlxcblxcbi0tLVxcblxcbiMjIyBTb3VyY2VzXFxuXFxuLSBbYE9XQVNQYF0oaHR0cHM6Ly9vd2FzcC5vcmcvKSDigJQgVGhlIE9wZW4gU291cmNlIFdlYiBBcHBsaWNhdGlvbiBTZWN1cml0eSBQcm90b2NvbFxcbi0gW2BNYXR0aGV3IEJyeWFudGBdKGh0dHBzOi8vZ2l0aHViLmNvbS9tYW5kYXRvcnlwcm9ncmFtbWVyLykg4oCUIFhTU0h1bnRlciAvIGNocm9tZSBnYWx2YW5pemVyXFxuLSBbYGx3bHhgXShodHRwczovL3NraWxscy5yZW5kZXJlZC5jaCkg4oCUIGx3bHhcXG5cXG4jIyBMaWNlbnNlXFxuXFxuW1RoZSBNSVQgTGljZW5zZV0oTElDRU5TRSkuXFxuXFxuLSBgLSBbIF0gKFt0b29sIG5hbWVdKDxsaW5rPil8KnRlc3RlZCp8KipgbmV3YCoqfGRlcHJlY2F0ZWR8IGBhY3RpdmVgKTogPGRlc2NyaXB0aW9uPiBgXFxuXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./md/blog/Sick-Security-and-Dev-Tools.md\n");

/***/ })

};;