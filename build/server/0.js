exports.ids = [0];
exports.modules = {

/***/ "./md/archive/features.md":
/*!********************************!*\
  !*** ./md/archive/features.md ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"It may not look like much, but dev.lwlx.xyz does a lot out of the box.\\n\\n**Markdown loading and rendering**: Using Next.js dynamic imports, you can load Markdown files and pass them into your Next.js pages as props. Easy peasy.\\n\\n**TypeScript + React**: Markdown is great for text-heavy, non-interactive content. For everything else, you'll want something a little more expressive. dev.lwlx.xyz makes it easy to mix Markdown and React on the same page. Just load your Markdown files with dynamic imports, pass it into your component as a prop, and render it with the `Markdown.tsx` component.\\n\\n**Built-in support for blogs**: dev.lwlx.xyz provides a utility for parsing Markdown blog posts with frontmatter metadata into a structured TypeScript object. Supported tags include: `title`, `subtitle`, `datePublished`, `tags`, `description`, `canonicalUrl`, `author`, `authorPhoto`, `authorTwitter`, `bannerPhoto`, and `thumbnailPhoto`\\n\\n**Medium-inspired styles**: The Markdown components (`Markdown.tsx`) contains default styles inspired by Medium.\\n\\n**Google Analytics**: Just add your Google Analytics ID (e.g. 'UA-999999999-1') to `globals.ts` and the appropriate snippet will be automatically added to every page.\\n\\n**RSS feed generation**: An RSS feed is auto-generated from your blog post feed.\\n\\n**SEO best practices**: Every blog post page automatically populated meta tags based on the post metadata. This includes a `title` tag, `meta` tags, `og:` tags, Twitter metadata, and a `link` tag containing the canonical URL.\\n\\n**GitHub-style code blocks**: with syntax highlighting powered by [react-syntax-highlighter](https://github.com/conorhastings/react-syntax-highlighter). Works out-of-the-box for all programming languages. Just use Markdown's triple backtick syntax with a \\\"language identifier\\\", [just like GitHub](https://help.github.com/en/github/writing-on-github/creating-and-highlighting-code-blocks).\\n\\n**Static generation**: you can generate a fully static version of your site using `yarn build && yarn export`. Powered by Next.js.\\n\\n**Zero magic**: You can view and modify every aspect of the site. If you're looking for a starting point, start modifying `index.tsx` (the home page), `BlogPost.tsx` (the blog post template), and `Markdown.tsx` (the Markdown component). And of course you can add entirely new pages/components as well!\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9tZC9hcmNoaXZlL2ZlYXR1cmVzLm1kPzM1YjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBZSxrNEVBQW0wRSIsImZpbGUiOiIuL21kL2FyY2hpdmUvZmVhdHVyZXMubWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIkl0IG1heSBub3QgbG9vayBsaWtlIG11Y2gsIGJ1dCBkZXYubHdseC54eXogZG9lcyBhIGxvdCBvdXQgb2YgdGhlIGJveC5cXG5cXG4qKk1hcmtkb3duIGxvYWRpbmcgYW5kIHJlbmRlcmluZyoqOiBVc2luZyBOZXh0LmpzIGR5bmFtaWMgaW1wb3J0cywgeW91IGNhbiBsb2FkIE1hcmtkb3duIGZpbGVzIGFuZCBwYXNzIHRoZW0gaW50byB5b3VyIE5leHQuanMgcGFnZXMgYXMgcHJvcHMuIEVhc3kgcGVhc3kuXFxuXFxuKipUeXBlU2NyaXB0ICsgUmVhY3QqKjogTWFya2Rvd24gaXMgZ3JlYXQgZm9yIHRleHQtaGVhdnksIG5vbi1pbnRlcmFjdGl2ZSBjb250ZW50LiBGb3IgZXZlcnl0aGluZyBlbHNlLCB5b3UnbGwgd2FudCBzb21ldGhpbmcgYSBsaXR0bGUgbW9yZSBleHByZXNzaXZlLiBkZXYubHdseC54eXogbWFrZXMgaXQgZWFzeSB0byBtaXggTWFya2Rvd24gYW5kIFJlYWN0IG9uIHRoZSBzYW1lIHBhZ2UuIEp1c3QgbG9hZCB5b3VyIE1hcmtkb3duIGZpbGVzIHdpdGggZHluYW1pYyBpbXBvcnRzLCBwYXNzIGl0IGludG8geW91ciBjb21wb25lbnQgYXMgYSBwcm9wLCBhbmQgcmVuZGVyIGl0IHdpdGggdGhlIGBNYXJrZG93bi50c3hgIGNvbXBvbmVudC5cXG5cXG4qKkJ1aWx0LWluIHN1cHBvcnQgZm9yIGJsb2dzKio6IGRldi5sd2x4Lnh5eiBwcm92aWRlcyBhIHV0aWxpdHkgZm9yIHBhcnNpbmcgTWFya2Rvd24gYmxvZyBwb3N0cyB3aXRoIGZyb250bWF0dGVyIG1ldGFkYXRhIGludG8gYSBzdHJ1Y3R1cmVkIFR5cGVTY3JpcHQgb2JqZWN0LiBTdXBwb3J0ZWQgdGFncyBpbmNsdWRlOiBgdGl0bGVgLCBgc3VidGl0bGVgLCBgZGF0ZVB1Ymxpc2hlZGAsIGB0YWdzYCwgYGRlc2NyaXB0aW9uYCwgYGNhbm9uaWNhbFVybGAsIGBhdXRob3JgLCBgYXV0aG9yUGhvdG9gLCBgYXV0aG9yVHdpdHRlcmAsIGBiYW5uZXJQaG90b2AsIGFuZCBgdGh1bWJuYWlsUGhvdG9gXFxuXFxuKipNZWRpdW0taW5zcGlyZWQgc3R5bGVzKio6IFRoZSBNYXJrZG93biBjb21wb25lbnRzIChgTWFya2Rvd24udHN4YCkgY29udGFpbnMgZGVmYXVsdCBzdHlsZXMgaW5zcGlyZWQgYnkgTWVkaXVtLlxcblxcbioqR29vZ2xlIEFuYWx5dGljcyoqOiBKdXN0IGFkZCB5b3VyIEdvb2dsZSBBbmFseXRpY3MgSUQgKGUuZy4gJ1VBLTk5OTk5OTk5OS0xJykgdG8gYGdsb2JhbHMudHNgIGFuZCB0aGUgYXBwcm9wcmlhdGUgc25pcHBldCB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgYWRkZWQgdG8gZXZlcnkgcGFnZS5cXG5cXG4qKlJTUyBmZWVkIGdlbmVyYXRpb24qKjogQW4gUlNTIGZlZWQgaXMgYXV0by1nZW5lcmF0ZWQgZnJvbSB5b3VyIGJsb2cgcG9zdCBmZWVkLlxcblxcbioqU0VPIGJlc3QgcHJhY3RpY2VzKio6IEV2ZXJ5IGJsb2cgcG9zdCBwYWdlIGF1dG9tYXRpY2FsbHkgcG9wdWxhdGVkIG1ldGEgdGFncyBiYXNlZCBvbiB0aGUgcG9zdCBtZXRhZGF0YS4gVGhpcyBpbmNsdWRlcyBhIGB0aXRsZWAgdGFnLCBgbWV0YWAgdGFncywgYG9nOmAgdGFncywgVHdpdHRlciBtZXRhZGF0YSwgYW5kIGEgYGxpbmtgIHRhZyBjb250YWluaW5nIHRoZSBjYW5vbmljYWwgVVJMLlxcblxcbioqR2l0SHViLXN0eWxlIGNvZGUgYmxvY2tzKio6IHdpdGggc3ludGF4IGhpZ2hsaWdodGluZyBwb3dlcmVkIGJ5IFtyZWFjdC1zeW50YXgtaGlnaGxpZ2h0ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9jb25vcmhhc3RpbmdzL3JlYWN0LXN5bnRheC1oaWdobGlnaHRlcikuIFdvcmtzIG91dC1vZi10aGUtYm94IGZvciBhbGwgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2VzLiBKdXN0IHVzZSBNYXJrZG93bidzIHRyaXBsZSBiYWNrdGljayBzeW50YXggd2l0aCBhIFxcXCJsYW5ndWFnZSBpZGVudGlmaWVyXFxcIiwgW2p1c3QgbGlrZSBHaXRIdWJdKGh0dHBzOi8vaGVscC5naXRodWIuY29tL2VuL2dpdGh1Yi93cml0aW5nLW9uLWdpdGh1Yi9jcmVhdGluZy1hbmQtaGlnaGxpZ2h0aW5nLWNvZGUtYmxvY2tzKS5cXG5cXG4qKlN0YXRpYyBnZW5lcmF0aW9uKio6IHlvdSBjYW4gZ2VuZXJhdGUgYSBmdWxseSBzdGF0aWMgdmVyc2lvbiBvZiB5b3VyIHNpdGUgdXNpbmcgYHlhcm4gYnVpbGQgJiYgeWFybiBleHBvcnRgLiBQb3dlcmVkIGJ5IE5leHQuanMuXFxuXFxuKipaZXJvIG1hZ2ljKio6IFlvdSBjYW4gdmlldyBhbmQgbW9kaWZ5IGV2ZXJ5IGFzcGVjdCBvZiB0aGUgc2l0ZS4gSWYgeW91J3JlIGxvb2tpbmcgZm9yIGEgc3RhcnRpbmcgcG9pbnQsIHN0YXJ0IG1vZGlmeWluZyBgaW5kZXgudHN4YCAodGhlIGhvbWUgcGFnZSksIGBCbG9nUG9zdC50c3hgICh0aGUgYmxvZyBwb3N0IHRlbXBsYXRlKSwgYW5kIGBNYXJrZG93bi50c3hgICh0aGUgTWFya2Rvd24gY29tcG9uZW50KS4gQW5kIG9mIGNvdXJzZSB5b3UgY2FuIGFkZCBlbnRpcmVseSBuZXcgcGFnZXMvY29tcG9uZW50cyBhcyB3ZWxsIVxcblwiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./md/archive/features.md\n");

/***/ })

};;